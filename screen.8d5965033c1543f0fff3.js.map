{"version":3,"file":"screen.8d5965033c1543f0fff3.js","mappings":"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","sources":["webpack://mortal-combat/./src/utils/render.js","webpack://mortal-combat/./src/api.js","webpack://mortal-combat/./src/screen.js","webpack://mortal-combat/./src/choose-screen.js"],"sourcesContent":["/**\n * Possible render position.\n */\nconst RenderPosition = {\n  AFTERBEGIN: 'afterbegin',\n  BEFOREEND: 'beforeend',\n};\n\n/**\n * Create element from tag and class names.\n * @param {string} tag - Tag name.\n * @param {string | undefined} className - Needed class for element or nothing.\n * @return {HTMLElement}\n */\nconst createElement = (tag, className) => {\n  const $tag = document.createElement(tag);\n\n  if (className) {\n    if (Array.isArray(className)) {\n      className.forEach((name) => $tag.classList.add(name));\n    } else {\n      $tag.classList.add(className);\n    }\n  }\n\n  return $tag;\n};\n\n/**\n * Render child element in to container.\n * @param {HTMLElement} container\n * @param {HTMLElement} child\n * @param {string} place\n */\nconst render = (container, child, place = RenderPosition.BEFOREEND) => {\n  switch (place) {\n    case RenderPosition.AFTERBEGIN:\n      container.prepend(child);\n      break;\n    case RenderPosition.BEFOREEND:\n      container.append(child);\n      break;\n    default:\n      throw new Error(`Wrong render position: ${place}`);\n  }\n};\n\nexport {\n  RenderPosition,\n  createElement,\n  render,\n};\n","const Method = {\n  GET: 'GET',\n  POST: 'POST',\n};\n\nexport default class Api {\n  constructor(playersUrl, randomUrl, fightUrl) {\n    this.playersUrl = playersUrl;\n    this.randomUrl = randomUrl;\n    this.fightUrl = fightUrl;\n  }\n\n  getCharacters() {\n    return this.load(this.playersUrl, Method.GET)\n      .then(Api.toJSON);\n  }\n\n  getRandomCharacter() {\n    return this.load(this.randomUrl, Method.GET)\n      .then(Api.toJSON);\n  }\n\n  postFight() {\n    return this.load(this.fightUrl, Method.POST);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  load(url, methodType) {\n    return fetch(\n      url,\n      { method: methodType },\n    )\n      .then(Api.checkStatus)\n      .catch(Api.checkError);\n  }\n\n  static checkStatus(response) {\n    if (\n      response.status < 200 && response.status > 299\n    ) {\n      throw new Error(`${response.status}: ${response.statusText}`);\n    }\n\n    return response;\n  }\n\n  static toJSON(response) {\n    return response.json();\n  }\n\n  static catchError() {\n  }\n}\n","import ChooseScreen from './choose-screen';\nimport Api from './api';\n\nconst PLAYERS_URL = 'https://reactmarathon-api.herokuapp.com/api/mk/players';\n\nconst RANDOM_URL = 'https://reactmarathon-api.herokuapp.com/api/mk/player/choose';\n\nconst FIGHT_URL = 'http://reactmarathon-api.herokuapp.com/api/mk/player/fight';\n\nconst $parent = document.querySelector('.parent');\nconst $player = document.querySelector('.player');\n\nconst api = new Api(PLAYERS_URL, RANDOM_URL, FIGHT_URL);\nconst chooseScreen = new ChooseScreen($parent, $player, api);\n\nchooseScreen.init();\n// const createElement = (tag, className) => {\n//   const $tag = document.createElement(tag);\n//   if (className) {\n//     if (Array.isArray(className)) {\n//       className.forEach((item) => {\n//         $tag.classList.add(item);\n//       });\n//     } else {\n//       $tag.classList.add(className);\n//     }\n//   }\n\n//   return $tag;\n// };\n\n// function createEmptyPlayerBlock() {\n//   const el = createElement('div', ['character', 'div11', 'disabled']);\n//   const img = createElement('img');\n//   img.src = 'http://reactmarathon-api.herokuapp.com/assets/mk/avatar/11.png';\n//   el.appendChild(img);\n//   $parent.appendChild(el);\n// }\n\n// async function init() {\n//   localStorage.removeItem('player1');\n\n//   const players = await fetch('https://reactmarathon-api.herokuapp.com/api/mk/players').then((res) => res.json());\n\n//   let imgSrc = null;\n//   createEmptyPlayerBlock();\n\n//   players.forEach((item) => {\n//     const el = createElement('div', ['character', `div${item.id}`]);\n//     const img = createElement('img');\n\n//     el.addEventListener('mousemove', () => {\n//       if (imgSrc === null) {\n//         imgSrc = item.img;\n//         const $img = createElement('img');\n//         $img.src = imgSrc;\n//         $player.appendChild($img);\n//       }\n//     });\n\n//     el.addEventListener('mouseout', () => {\n//       if (imgSrc) {\n//         imgSrc = null;\n//         $player.innerHTML = '';\n//       }\n//     });\n\n//     el.addEventListener('click', () => {\n//       //TODO: Мы кладем нашего игрока в localStorage что бы потом на арене его достать.\n//       // При помощи localStorage.getItem('player1'); т.к. в localStorage кладется строка,\n//       // то мы должны ее распарсить обратным методом JSON.parse(localStorage.getItem('player1'));\n//       // но это уже будет в нашем классе Game когда мы инициализируем игроков.\n//       localStorage.setItem('player1', JSON.stringify(item));\n\n//       el.classList.add('active');\n\n//       setTimeout(() => {\n//         // TODO: Здесь должен быть код который перенаправит вас на ваше игровое поле...\n//         //  Пример использования: window.location.pathname = 'arenas.html';\n//       }, 1000);\n//     });\n\n//     img.src = item.avatar;\n//     img.alt = item.name;\n\n//     el.appendChild(img);\n//     $parent.appendChild(el);\n//   });\n// }\n\n// init();\n","import { createElement, render } from './utils/render';\n\nconst DEFAULT_AVATAR = 'http://reactmarathon-api.herokuapp.com/assets/mk/avatar/11.png';\n\nexport default class ChooseScreen {\n  constructor(\n    $parent,\n    $player,\n    api,\n  ) {\n    this.$parent = $parent;\n    this.$player = $player;\n    this.api = api;\n\n    this.character = {};\n\n    this.showedCharacter = null;\n\n    this.handleCharacterMouseover = this.handleCharacterMouseover.bind(this);\n    this.handleCharacterMouseout = this.handleCharacterMouseout.bind(this);\n    this.handleCharacterClick = this.handleCharacterClick.bind(this);\n  }\n\n  init() {\n    this.renderEmptyCharacter();\n    this.api.getCharacters()\n      .then((characters) => this.renderCharacters(characters));\n  }\n\n  renderCharacters(characters) {\n    characters.forEach((character) => {\n      const { name, id, avatar } = character;\n      const alt = name;\n      this.character[id] = character;\n      const $character = this.createCharacter(\n        {\n          name,\n          id,\n          avatar,\n          alt,\n        },\n      );\n\n      $character.addEventListener('mouseover', this.handleCharacterMouseover);\n      $character.addEventListener('click', this.handleCharacterClick);\n      render(this.$parent, $character);\n    });\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  createCharacter(\n    {\n      avatar,\n      id,\n      alt,\n      isDisabled,\n    },\n  ) {\n    const element = createElement('div', ['character', `div${id}`]);\n\n    if (isDisabled) {\n      element.classList.add('disabled');\n    }\n\n    element.dataset.id = id;\n\n    const img = createElement('img');\n    img.setAttribute('src', avatar);\n\n    if (alt) {\n      img.setAttribute('alt', alt);\n    }\n\n    render(element, img);\n    return element;\n  }\n\n  handleCharacterMouseover(evt) {\n    if (evt.target.tagName === 'DIV') {\n      this.showCharacter(evt.target.dataset.id);\n      evt.target.addEventListener('mouseout', this.handleCharacterMouseout);\n    }\n  }\n\n  showCharacter(id) {\n    const { img } = this.character[id];\n\n    if (!this.$showedCharacter) {\n      this.$showedCharacter = createElement('img');\n      render(this.$player, this.$showedCharacter);\n    }\n\n    if (img === this.$showedCharacter.src) {\n      return;\n    }\n    this.$showedCharacter.setAttribute('src', img);\n  }\n\n  renderEmptyCharacter() {\n    const $element = this.createCharacter({\n      avatar: DEFAULT_AVATAR,\n      isDisabled: true,\n      id: 11,\n    });\n\n    render(this.$parent, $element);\n  }\n\n  enemyChoose(character) {\n    this.enemy = character;\n    this.startGame();\n  }\n\n  startGame() {\n    localStorage.setItem('player1', JSON.stringify(this.player));\n    localStorage.setItem('player2', JSON.stringify(this.enemy));\n    window.location.pathname = 'arenas.html';\n  }\n\n  handleCharacterClick(evt) {\n    if (evt.target.tagName === 'DIV') {\n      evt.target.classList.add('active');\n      this.player = this.character[evt.target.dataset.id];\n      document.querySelectorAll('.character').forEach((character) => {\n        character.removeEventListener('click', this.handleCharacterClick);\n        character.removeEventListener('mouseover', this.handleCharacterMouseover);\n      });\n\n      this.api.getRandomCharacter()\n        .then((enemy) => this.enemyChoose(enemy));\n    }\n  }\n\n  handleCharacterMouseout(evt) {\n    if (evt.target === 'DIV') {\n      this.evt.target.removeEventListener('mouseout', this.handleCharacterMouseout);\n      this.$showedCharacter.remove();\n      this.$showedCharacter = null;\n    }\n  }\n}\n"],"names":["RenderPosition","createElement","tag","className","$tag","document","Array","isArray","forEach","name","classList","add","render","container","child","place","prepend","append","Error","Api","constructor","playersUrl","randomUrl","fightUrl","this","getCharacters","load","then","toJSON","getRandomCharacter","postFight","url","methodType","fetch","method","checkStatus","catch","checkError","static","response","status","statusText","json","$parent","querySelector","$player","api","chooseScreen","character","showedCharacter","handleCharacterMouseover","bind","handleCharacterMouseout","handleCharacterClick","init","renderEmptyCharacter","characters","renderCharacters","id","avatar","alt","$character","createCharacter","addEventListener","isDisabled","element","dataset","img","setAttribute","evt","target","tagName","showCharacter","$showedCharacter","src","$element","enemyChoose","enemy","startGame","localStorage","setItem","JSON","stringify","player","window","location","pathname","querySelectorAll","removeEventListener","remove"],"sourceRoot":""}